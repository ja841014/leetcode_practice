/*
用stack來到當作類似counter 可以用來執行以前需要執行的事情
*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) {
        List<Integer> ls = new ArrayList<>();
        while(head != null) {
            ls.add(head.val);
            head = head.next;
        }
        Stack<Integer> st = new Stack<>();
        int[] arr = new int[ls.size()];
        for(int i = 0 ; i < ls.size(); i++) {
            while(!st.isEmpty() && ls.get(i) > ls.get(st.peek())) {
                int index = st.pop();
                arr[index] = ls.get(i);
            }
            st.push(i);
        }
        return arr;
    }
}


