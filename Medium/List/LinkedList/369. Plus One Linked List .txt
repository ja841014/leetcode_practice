/*
Given a non-negative integer represented as non-empty a singly linked list of digits, plus one to the integer.

You may assume the integer do not contain any leading zero, except the number 0 itself.

The digits are stored such that the most significant digit is at the head of the list.

Example :

Input: [1,2,3]
Output: [1,2,4]
*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode plusOne(ListNode head) {
        ListNode tmp = head;
        List<Integer> ls = new ArrayList<>();
        boolean gate = false;
        while(tmp != null) {
            ls.add(tmp.val);
            tmp = tmp.next;
        }
        for(int i = ls.size() - 1; i >= 0 ; i--) {
            if(ls.get(i) == 9) {
                ls.set(i, 0);
                if(i == 0) {
                    gate = true;
                }
            }
            else {
                ls.set(i, ls.get(i) + 1);
                
                break;
            }
        }
        if(gate == true) {
            ls.add(0, 1);
        }
        ListNode result = new ListNode(-1);
        ListNode tmp2 = result;
        for(int i = 0; i < ls.size(); i++) {
            tmp2.next = new ListNode(ls.get(i));
            tmp2 = tmp2.next;
        }
        return result.next;
    }
}