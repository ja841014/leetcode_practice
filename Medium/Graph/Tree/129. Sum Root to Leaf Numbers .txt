/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int total;
    public int sumNumbers(TreeNode root) {
        if(root == null) {
            return 0;
        }
        StringBuilder sb = new StringBuilder();
        total = 0;
        helper(sb, root);
        return total;
    }
    public void helper(StringBuilder sb, TreeNode node) {
        if(node.left == null && node.right == null) {
            sb.append(node.val);
            total = total + Integer.parseInt(sb.toString() );
            sb.deleteCharAt(sb.length() - 1);
            return;
        }
        if(node.left != null) {
            sb.append(node.val);
            helper(sb, node.left);
            sb.deleteCharAt(sb.length() - 1);
        }
        if(node.right != null) {
            sb.append(node.val);
            helper(sb, node.right);
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}