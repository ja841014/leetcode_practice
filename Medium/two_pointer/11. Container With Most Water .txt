/*
Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.

proof:
If we try to move the pointer at the longer line inwards, we won't gain any increase in area, since it is limited by the shorter line. But moving the shorter line's pointer could turn out to be beneficial, as per the same argument, despite the reduction in the width. This is done since a relatively longer line obtained by moving the shorter line's pointer might overcome the reduction in area caused by the width reduction.
*/
class Solution {
    
    public int maxArea(int[] height) {
        int left = 0;
        int right = height.length - 1;
        int maxVolumn = 0;
        // when we meet the shorter line we have to go to next line
        while(left <= right) {
            int diff = right - left;
            if(height[left] < height[right]) {
                maxVolumn = Math.max(maxVolumn, diff * height[left] );
                left++;
            }
            else {
                maxVolumn = Math.max(maxVolumn, diff * height[right] );
                right--;
            }
        }
        return maxVolumn;
    }
}