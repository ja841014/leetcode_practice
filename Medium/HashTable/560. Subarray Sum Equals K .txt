/*
Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.

Example 1:

Input:nums = [1,1,1], k = 2
Output: 2
*/
class Solution {
    public int subarraySum(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<>();
        int cnt = 0;
        int sum = 0;
        map.put(0, 1);
        for(int i = 0; i < nums.length; i++) {
            sum = sum + nums[i];
            
            if(map.containsKey(sum - k) ) {
                cnt = cnt + map.get(sum - k);
            }
            // we cannot put else statement in here
            // else { 
                map.put(sum, map.getOrDefault(sum, 0) + 1);
            // }
        }
        return cnt;
    }
}