// Given an integer array arr of distinct integers and an integer k.
// A game will be played between the first two elements of the array (i.e. arr[0] and arr[1]). In each round of the game, we compare arr[0] with arr[1], the larger integer wins and remains at position 0 and the smaller integer moves to the end of the array. The game ends when an integer wins k consecutive rounds.
// Return the integer which will win the game.
// It is guaranteed that there will be a winner of the game.

// Example 2:
// Input: arr = [3,2,1], k = 10
// Output: 3
// Explanation: 3 will win the first 10 rounds consecutively

// Example 3:
// Input: arr = [1,9,8,2,3,7,6,4,5], k = 7
// Output: 9

// Example 4:
// Input: arr = [1,11,22,33,44,55,66,77,88,99], k = 1000000000
// Output: 99
class Solution {
    public int getWinner(int[] arr, int k) {
        int curr = arr[0];
        int count = 0;
       for(int i = 1; i < arr.length; i++) {
           if(curr < arr[i]) { // mean we have to reset
               curr = arr[i];
               count = 0;
           }
           if(++count == k) {
               return curr;
           }
       }
        return curr;
    }
}