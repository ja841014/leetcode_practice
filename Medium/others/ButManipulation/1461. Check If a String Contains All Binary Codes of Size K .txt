/*
Given a binary string s and an integer k, return true if every binary code of length k is a substring of s. Otherwise, return false.

Example 1:
Input: s = "00110110", k = 2
Output: true
Explanation: The binary codes of length 2 are "00", "01", "10" and "11". They can be all found as substrings at indices 0, 1, 3 and 2 respectively.

Example 2:
Input: s = "0110", k = 1
Output: true
Explanation: The binary codes of length 1 are "0" and "1", it is clear that both exist as a substring. 

Example 3:
Input: s = "0110", k = 2
Output: false
Explanation: The binary code "00" is of length 2 and does not exist in the array.
*/
class Solution {
    public boolean hasAllCodes(String s, int k) {
        // 1 左移 k 單位 => 1 << 2 => 100(binary string) == 4(int)
        int size = 1 << k;
        Set<String> seen = new HashSet<>();
        for(int i = 0; i <= s.length() - k; i++) {
            String subStr = s.substring(i, i + k);
            //System.out.println(subStr);
            if(!seen.contains(subStr)) {
                seen.add(subStr);
                size--;
                if(size == 0) {
                    return true;
                }
            }
        }
        return false;
    }
}