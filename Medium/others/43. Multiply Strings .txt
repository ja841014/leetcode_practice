/*
Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.
Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.

Example 1:

Input: num1 = "2", num2 = "3"
Output: "6"
Example 2:

Input: num1 = "123", num2 = "456"
Output: "56088"
*/
class Solution {
    public String multiply(String num1, String num2) {
        int m = num1.length();
        int n = num2.length();
        int[] arr = new int[m + n];
        for(int i = m - 1; i >= 0; i--) {
            for(int j = n - 1; j >= 0; j--) {
                int sum = (num1.charAt(i) - '0') * (num2.charAt(j) - '0');
                int carryPos = i + j;
                int normalPos = i + j + 1;
                sum = sum + arr[normalPos];
                // it will cover new value on this pos
                arr[normalPos] = sum % 10;
                arr[carryPos] = arr[carryPos] + sum / 10;
            }
        }
        
        StringBuilder sb = new StringBuilder();
        for(int i: arr) {
            if(sb.length() == 0 && i == 0) {
                continue;
            }
            sb.append(i);
        }
        return sb.toString().equals("") ? "0" : sb.toString();
    }
}