import java.util.*;
class Solution {
    public static int minContainerSize(int d, int[] P) {
        // WRITE YOUR BRILLIANT CODE HERE
        //Integer[][] dp = new Integer[nums.length][P + 1];
        Integer[][] dp = new Integer[P.length][d + 1];
        int result = helper(P, 0, d, dp);
        return result == Integer.MAX_VALUE ? -1 : result;
    }
    private static int helper(int[] jobs, int start, int days, Integer[][] dp) {
        if (jobs.length - start < days) return Integer.MAX_VALUE;
        if (days == 0) {
            if (start == jobs.length) return 0;
            return Integer.MAX_VALUE;
        }
        if (dp[start][days] != null) return dp[start][days];
        int cur = Integer.MAX_VALUE, max = 0;
        for (int i = start; i < jobs.length; i++) {
            max = Math.max(jobs[i], max);
            int next = helper(jobs, i + 1, days - 1, dp);
            if (next != Integer.MAX_VALUE) {
                cur = Math.min(cur, max + next);
            }
        }
        return dp[start][days] = cur;
    }
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        int d = Integer.parseInt(scanner.nextLine());
        int[] P = Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
        scanner.close();
        System.out.println(minContainerSize(d, P));
    }
}