// You have an array of logs.  Each log is a space delimited string of words.

// For each log, the first word in each log is an alphanumeric identifier.  Then, either:

// Each word after the identifier will consist only of lowercase letters, or;
// Each word after the identifier will consist only of digits.
// We will call these two varieties of logs letter-logs and digit-logs.  It is guaranteed that each log has at least one word after its identifier.

// Reorder the logs so that all of the letter-logs come before any digit-log.  The letter-logs are ordered lexicographically ignoring identifier, with the identifier used in case of ties.  The digit-logs should be put in their original order.
class Solution {
    public String[] reorderLogFiles(String[] logs) {
        Arrays.sort(logs, (a, b) -> {
            String[] a_split = a.split(" ", 2);
            String[] b_split = b.split(" ", 2);
            // boolean a_isdigit = Character.isDigit(a_split[1].charAt(0) );
            // boolean b_isdigit = Character.isDigit(b_split[1].charAt(0) );
            // if they both are letter log
            if( !Character.isDigit(a_split[1].charAt(0) ) && !Character.isDigit(b_split[1].charAt(0)) ){
                int is_equal =  a_split[1].compareTo(b_split[1]);
                if(is_equal == 0) {
                    return a_split[0].compareTo(b_split[0]);
                }
                else {
                    return is_equal;
                }
            }
            // if a is digit log
            if( Character.isDigit(a_split[1].charAt(0))) {
                // if b also is digit log
                if( Character.isDigit(b_split[1].charAt(0))) {
                    return 0;
                }
                // if b is letter log
                else {
                    return 1; // a is digit; b is letter, so b will move forward 正的話 是後面往前移
                }
            }
            // if a is letter and b is digit
            else {
                return -1; // a is letter; b is digit, so a will move forward 負的話 是前面往前移
            }
            
            
        });
        return logs;
    }
}