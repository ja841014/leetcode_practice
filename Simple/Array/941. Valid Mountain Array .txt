/*
Given an array of integers arr, return true if and only if it is a valid mountain array.
Recall that arr is a mountain array if and only if:
arr.length >= 3
There exists some i with 0 < i < arr.length - 1 such that:
arr[0] < arr[1] < ... < arr[i - 1] < A[i]
arr[i] > arr[i + 1] > ... > arr[arr.length - 1]

Example 1:
Input: arr = [2,1]
Output: false

Example 2:
Input: arr = [3,5,5]
Output: false

Example 3:
Input: arr = [0,3,2,1]
Output: true

*/
class Solution {
    public boolean validMountainArray(int[] arr) {
        if(arr.length < 3) {
            return false;
        }
        int index = 1;
        boolean downHillPhase = false;
        // uphill
        while(arr[index - 1] < arr[index]) {
            // max = arr[index];
            index++;
            if(index >= arr.length) {
                return false;
            }
        }
        // downhill
        while(index != 1 && index < arr.length && arr[index - 1] > arr[index]) {
            index++;
            downHillPhase = true;
        }
        if(downHillPhase == true && index == arr.length) {
            return true;
        }
        return false;
    }
}