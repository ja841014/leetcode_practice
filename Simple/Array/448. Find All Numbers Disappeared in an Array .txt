/* METHOD
For each element nums[i], mark the element at the corresponding location negative if it's not already marked

Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.

Example 1:
Input: nums = [4,3,2,7,8,2,3,1]
Output: [5,6]

Example 2:
Input: nums = [1,1]
Output: [2]
*/
class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> ls = new ArrayList<>();
        for(int i = 0; i < nums.length; i++) {
            if(nums[i] < 0) {
                int tmp = Math.abs(nums[i]);
                if(nums[tmp - 1] < 0) {
                    continue;
                }
                nums[tmp - 1] = -nums[ tmp - 1 ] ;
            }
            else {
                if(nums[nums[i] - 1] < 0) {
                    continue;
                }
                nums[nums[i] - 1] = -nums[nums[i] - 1];
            }           
        }
        for(int i = 0; i < nums.length; i++) {
            if(nums[i] > 0) {
                ls.add(i + 1);
            }
        }
        return ls;
    }
}