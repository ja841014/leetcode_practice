/*
Given a string s, return true if the s can be palindrome after deleting at most one character from it.

Example 1:
Input: s = "aba"
Output: true

Example 2:
Input: s = "abca"
Output: true
Explanation: You could delete the character 'c'.

Example 3:
Input: s = "abc"
Output: false
*/
class Solution {
    public boolean validPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;
        
        return helper(s, left, right, false);
    }
    
    private boolean helper(String s, int left, int right, boolean check) {
        
        while(left <= right) {
            if(s.charAt(left) == s.charAt(right)) {
                left++;
                right--;
            }
            else {
                if(check == true) {
                    return false;
                }
                if(helper(s, left + 1, right, true) == true || helper(s, left, right - 1, true) == true) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        return true;
    }
}