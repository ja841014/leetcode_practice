/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> ls = new ArrayList<>();
        List<Integer> list_ = new ArrayList<>();
        int size = 0;
        TreeNode tmp = root;
        if(root == null) {
            return ls;
        }
        q.add(tmp);
        list_.add(tmp.val);
        ls.add(list_);
        while(!q.isEmpty()) {
            List<Integer> list = new ArrayList<>();
            size = q.size();
            for(int i = 0; i < size; i++) {
                if(tmp.left != null) {
                    q.add(tmp.left);
                    list.add(tmp.left.val);
                }
                if(tmp.right != null) {
                    q.add(tmp.right);
                    list.add(tmp.right.val);
                }
                q.poll();
                tmp = q.peek();
            }
            ls.add(list);
        }
        ls.remove(ls.size()-1);
        Collections.reverse(ls);
        return ls;
    }
}