/*
Suppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings.

You need to help them find out their common interest with the least list index sum. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.

Example 1:
Input:
["Shogun", "Tapioca Express", "Burger King", "KFC"]
["Piatti", "The Grill at Torrey Pines", "Hungry Hunter Steakhouse", "Shogun"]
Output: ["Shogun"]
Explanation: The only restaurant they both like is "Shogun".

Example 2:
Input:
["Shogun", "Tapioca Express", "Burger King", "KFC"]
["KFC", "Shogun", "Burger King"]
Output: ["Shogun"]
Explanation: The restaurant they both like and have the least index sum is "Shogun" with index sum 1 (0+1).
*/
class Solution {
    public String[] findRestaurant(String[] list1, String[] list2) {
        Map<String, Integer> map = new HashMap<>();
        List<String> ls = new ArrayList<>();
        int index = 0;
        for(String s : list1) {
            map.put(s, index);
            index++;
        }
        int small_sum = Integer.MAX_VALUE;
        
        
        for(int i = 0; i < list2.length; i++) {
            if(map.containsKey(list2[i]) == true) {
                int cur_sum = map.get(list2[i]) + i;
                if(small_sum > cur_sum) {
                    ls.clear();
                    ls.add(list2[i]);
                    small_sum =  cur_sum;
                }
                else if(small_sum == cur_sum) {
                    ls.add(list2[i]);
                }
            }
        }
        
        return ls.toArray(new String[ls.size()]);
        
    }
}