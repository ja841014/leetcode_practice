/*
Given a string num which represents an integer, return true if num is a strobogrammatic number.
A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).

Example 1:
Input: num = "69"
Output: true

Example 2:
Input: num = "88"
Output: true

Example 3:
Input: num = "962"
Output: false

Example 4:
Input: num = "1"
Output: true
*/
class Solution {
    public boolean isStrobogrammatic(String num) {
        // 2 3 4 5 7 = > false
        // 0 1 8 => itself
        // 6 9 same group
        Map<Character, Character> map = new HashMap<>();
        map.put('0', '0');
        map.put('1', '1');
        map.put('8', '8');
        map.put('6', '9');
        map.put('9', '6');
        
        int range = num.length() % 2 == 0 ? num.length() / 2 - 1 : num.length() / 2 ;
        for(int i = 0; i <= range; i++) {
            char curChar = num.charAt(i);
            if(map.containsKey(curChar) == false) {
                return false;
            }
            if(map.get(curChar) != num.charAt(num.length() - 1 - i)) {
                return false;
            }
        }
        return true;
    }
}