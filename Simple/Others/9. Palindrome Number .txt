/*
Given an integer x, return true if x is palindrome integer.
An integer is a palindrome when it reads the same backward as forward. For example, 121 is palindrome while 123 is not.

Example 1:
Input: x = 121
Output: true

Example 2:
Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.

Example 3:
Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.

Example 4:
Input: x = -101
Output: false

*/
class Solution {
    public boolean isPalindrome(int x) {
        if(x < 0) {
            return false;
        }
        int reverse = 0;
        int remain = 0;
        int org = x;
        
        while(org != 0) {
            remain = org % 10;
            reverse = reverse * 10 + remain;
            org = org / 10;
        }
        return x == reverse ? true : false;
        // String str = String.valueOf(x);
        // return helper(str);
    }
    
//     public boolean helper(String str) {
//         for(int i = 0; i < str.length() / 2; i++) {
//             char front = str.charAt(i);
//             char back = str.charAt(str.length() - 1 - i);
//             if(front != back) {
//                 return false;
//             }
//         }
//         return true;
//     }
    
    
}