/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode result;
    private TreeNode resultTmp;
    
    public TreeNode increasingBST(TreeNode root) {
        // add a dummy node first
        result = new TreeNode(-1);
        // let resultTmp to traverse the new TreeNode
        resultTmp = result;
        inOrder(root);
        return result.right;
    }
    
    private void inOrder(TreeNode root) {
        if(root == null) {
            return;
        }
        inOrder(root.left);
        resultTmp.right = new TreeNode(root.val);
        resultTmp = resultTmp.right;
        inOrder(root.right);
    }
    
}