/* we can optimize by use constant space. using array element as index and make it negative.
Given an unsorted integer array, find the smallest missing positive integer.
Example 1:

Input: [1,2,0]
Output: 3
Example 2:

Input: [3,4,-1,1]
Output: 2
Example 3:

Input: [7,8,9,11,12]
Output: 1
*/
class Solution {
    public int firstMissingPositive(int[] nums) {
        if(nums.length == 0) {
            return 1;
        }
        else if(nums.length == 1) {
            if(nums[0] != 1) {
                return 1;
            }
            else {
                return 2;
            }
        }
        boolean[] table = new boolean[nums.length + 1];
        for(int i = 0; i < nums.length; i++) {
            if(nums[i] <= 0 || nums[i] >= table.length) {
                continue;
            }
            table[nums[i]] = true;
        }
        int result = -1;
        for(int i = 1; i < table.length; i++) {
            if(table[i] == false) {
                result = i;
                break;
            }
        }
        if(result == -1) {
            result = table.length;
        }
        return result;
    }
}