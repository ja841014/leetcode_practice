/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        TreeNode temp = root; 
        int size;
        int level = 1;
        int min_level = Integer.MAX_VALUE;
        if(root == null) {
            return 0;
        }
        q.add(temp);
        while(!q.isEmpty()) {
            size = q.size();
            for(int i = 0; i < size; i++) {
                if(temp.left != null) {
                    q.add(temp.left);
                }
                if(temp.right != null) {
                    q.add(temp.right);
                }
                if(temp.left == null && temp.right == null && min_level > level) {
                    //leaf node
                    min_level = level;
                }
                q.poll();
                temp = q.peek();
            }
            level++;
        }
        return min_level;
    }
}