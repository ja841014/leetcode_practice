class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> ls = new ArrayList<>();
        if(nums.length == 0) {
            return ls;
        }
        
        String head = nums[0] + "";
        String tail = "";
        for(int i = 1; i < nums.length; i++) {
            if(nums[i] == nums[i - 1] + 1) {
                tail = nums[i] + "";
                continue;
            }
            else {
                if(tail.isEmpty()) {
                    ls.add(head);
                    head = nums[i] + "";
                }
                else {
                    head = head + "->" + tail;
                    ls.add(head);
                    head = nums[i] + "";
                    tail = "";
                }
                
            }
        }
        if(!tail.isEmpty()) {
            head = head + "->" + tail;
            ls.add(head);
            return ls;
        }
        ls.add(head);
        return ls;
    }
}

/*
class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> res = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return res;
        }
        int anchor = 0;
        for (int i = 0; i < nums.length; i ++) {
            anchor = i;
            while(i + 1 < nums.length && nums[i + 1] - nums[i] == 1) {
                i ++;
            }
            res.add(getRange(nums[anchor], nums[i]));
        }
        return res;
    }
    
    private String getRange(int start, int end) {
        StringBuilder sb = new StringBuilder();
        if (start == end) {
            sb.append(start);
        } else {
            sb.append(start).append("->").append(end);
        }
        return sb.toString();
    }
}

*/