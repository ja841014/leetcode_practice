/*
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.

Example 1:
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

Example 2:
Input: nums = [2,0,1]
Output: [0,1,2]

Example 3:
Input: nums = [0]
Output: [0]

Example 4:
Input: nums = [1]
Output: [1]
*/
class Solution {
    public void sortColors(int[] nums) {
        int leftPtr = 0;
        int rightPtr = nums.length - 1;
        int curr = 0;
        
        while(curr <= rightPtr) {
            if(nums[curr] == 0) {
                int tmp = nums[leftPtr];
                nums[leftPtr] = nums[curr];
                nums[curr] = tmp;
                leftPtr++;
                curr++;
            }
            else if(nums[curr] == 2) {
                int tmp = nums[rightPtr];
                nums[rightPtr] = nums[curr];
                nums[curr] = tmp;
                rightPtr--;
            }
            else {
                curr++;
            }
        }
    }
}