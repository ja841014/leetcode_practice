// recursive
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        return helper(root, null, null);
        
    }
    private boolean helper(TreeNode root, Integer lower, Integer higher) {
        if(root == null) {
            return true;
        }
        // smaller than lower
        if(lower != null && lower >= root.val) {
            return false;
        }
        // bigger than higher
        if(higher != null && higher <= root.val) {
            return false;
        }
        if( !helper(root.left, lower, root.val) ) {
            return false;
        }
        if( !helper(root.right, root.val, higher) ) {
            return false;
        }
        return true;
    }
}