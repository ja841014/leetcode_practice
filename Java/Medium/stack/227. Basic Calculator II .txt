/*
Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

Example 1:

Input: "3+2*2"
Output: 7
Example 2:

Input: " 3/2 "
Output: 1
Example 3:

Input: " 3+5 / 2 "
Output: 5
*/
class Solution {
    public int calculate(String s) {
        
        Stack<Integer> st = new Stack<>();
        int currentNum = 0;
        // we have to take one step forward
        char operation = '+';
        for(int i = 0; i < s.length(); i++) {
            char currChar = s.charAt(i);
            if(Character.isDigit(currChar) == true) {
                currentNum = currentNum * 10 + currChar - '0';
            }
            // we need a condition "i == s.length() - 1" to process the last calculate
            if ( !Character.isDigit(currChar) && !Character.isWhitespace(currChar) || i == s.length() - 1){
                
                if(operation == '-') {
                    st.push(-currentNum);
                }
                else if(operation == '+') {
                    st.push(currentNum);
                }
                else if(operation == '*') {
                    int tmp = st.pop()*currentNum;
                    st.push(tmp);
                }
                else if(operation == '/') {
                    int tmp = st.pop() / currentNum;
                    st.push(tmp);
                }
                currentNum = 0;
                operation = currChar;
            }
        }
        
        int result = 0;
        while(!st.isEmpty()) {
            result = result + st.pop();
        }
        return result;
    }
}