class Solution {
    public int minAddToMakeValid(String s) {
        Stack<Character> st = new Stack<>();
        char[] arr = s.toCharArray();
        for(int i = 0; i < s.length(); i++) {
            char c = arr[i];
            if(c == '(') {
                st.push(c);
            }
            else {
                if(!st.isEmpty() && st.peek() == '(') {
                    st.pop();
                }
                else {
                    st.push(c);
                }
            }
        }
        return st.size();
    }
}
/*
class Solution {
    public int minAddToMakeValid(String S) {
        int ans = 0, bal = 0;
        for (int i = 0; i < S.length(); ++i) {
            bal += S.charAt(i) == '(' ? 1 : -1;
            // It is guaranteed bal >= -1
            if (bal == -1) {
                ans++;
                bal++;
            }
        }

        return ans + bal;
    }
}
*/