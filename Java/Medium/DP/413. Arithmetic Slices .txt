/*
An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.
For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.
Given an integer array nums, return the number of arithmetic subarrays of nums.
A subarray is a contiguous subsequence of the array.

Example 1:
Input: nums = [1,2,3,4]
Output: 3
Explanation: We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.

Example 2:
Input: nums = [1]
Output: 0
*/
class Solution {
    /* 
    O(n)
    public int numberOfArithmeticSlices(int[] A) {
        int[] dp = new int[A.length];
        int sum = 0;
        for (int i = 2; i < dp.length; i++) {
            if (A[i] - A[i - 1] == A[i - 1] - A[i - 2]) {
                dp[i] = 1 + dp[i - 1];
                sum += dp[i];
            }
        }
        return sum;
    }
        
    */
    public int numberOfArithmeticSlices(int[] nums) {
        int size = nums.length;
        if(size < 3) {
            return 0;
        }
        int[][] table = new int[size][size];
        int count = 0;
        for(int i = 0; i < size - 2; i++) {
            int diff = Integer.MIN_VALUE;
            for(int j = i + 1; j < size; j++) {
                int newDiff = nums[j] - nums[j - 1];
                if(j - i + 1 < 3) {
                    if(diff == Integer.MIN_VALUE) {
                        diff = newDiff;
                    }
                    else if(diff != newDiff) {
                        break;
                    }
                    continue;
                }
                
                if(diff != newDiff) {
                    break;
                }
                count++;
            }
            
        }
        return count;
    }
}