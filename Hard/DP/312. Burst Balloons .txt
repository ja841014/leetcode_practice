class Solution {
    int[][] dpTable;
    public int maxCoins(int[] nums) {
        int[] newArr = new int[nums.length + 2];
        dpTable = new int[newArr.length][newArr.length];
        newArr[0] = 1;
        newArr[newArr.length - 1]  = 1;
        for(int i = 0; i < nums.length; i++) {
            newArr[i + 1] = nums[i];
        }
        return dp(newArr, 0, newArr.length - 1);
    }
    
    private int dp(int[] arr, int left, int right) {
        // 只有兩個元素->都不能爆破 return 0
        if(left + 1 == right) {
            return 0;
        }
        
        if(dpTable[left][right] != 0) {
            return dpTable[left][right];
        }
        
        dpTable[left][right] = Integer.MIN_VALUE;
        // 找最後一個爆的氣球然後遍歷所有可能
        for(int i = left + 1; i < right; i++) {
            dpTable[left][right] = Math.max(dpTable[left][right], 
                        arr[left] * arr[i] * arr[right] + dp(arr, left, i) + dp(arr, i, right));
        }
        
        
        return dpTable[left][right];
    }
}
}